<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
 
    <!-- 数据库连接池 -->
    <!-- 加载配置文件 -->
    <context:property-placeholder location="classpath*:*.properties"/>
    <!-- 数据库连接池 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <property name="url" value="${jdbc.url}"/><!--数据库连接地址，端口号，数据库名-->
        <property name="username" value="${jdbc.username}"/><!--数据库用户名-->
        <property name="password" value="${jdbc.password}"/><!--数据库密码-->
        <property name="driverClassName" value="${jdbc.driver}"/><!--数据库驱动-->
        <property name="maxActive" value="100"/>
        <property name="minIdle" value="5"/>
    </bean>
 
    <!-- 让spring管理sqlsessionfactory 使用mybatis和spring整合包中的 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 加载mybatis的全局配置文件，可以自定义配置其他的文件 -->
        <property name="configLocation" value="classpath:mybatis/SqlMapConfig.xml"/>
        <!-- 扫描entity包并使用别名 -->
		<property name="typeAliasesPackage" value="com.xc.entity"/>
		<!-- 扫描sql配置文件 -->
		<property name="mapperLocations" value="classpath:mybatis/sql-mapping/*.xml"/>
    </bean>
    
    <!--mapper文件扫描的配置-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    	<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
		<!-- 给出需要扫描dao接口包 -->
        <property name="basePackage" value="com.xc.mapper"/>
    </bean>
    
    <!--5 声明式事务管理 -->
    <!--定义事物管理器，由spring管理事务 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--支持注解驱动的事务管理，指定事务管理器 
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <context:component-scan base-package="com.zhangguo.bookstore"></context:component-scan>
    <aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy>
    -->
    
    
</beans>
